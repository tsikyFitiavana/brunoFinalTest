{"ast":null,"code":"import _defineProperty from \"/home/dev/Musique/brunoFinalTest/test_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dev/Musique/brunoFinalTest/test_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev/Musique/brunoFinalTest/test_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev/Musique/brunoFinalTest/test_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev/Musique/brunoFinalTest/test_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev/Musique/brunoFinalTest/test_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev/Musique/brunoFinalTest/test_front/src/components/auth/Register.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this));\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var newUser = {\n        name: _this.state.name,\n        email: _this.state.email,\n        password: _this.state.password,\n        password2: _this.state.password2\n      };\n\n      _this.props.registerUser(newUser, _this.props.history);\n    };\n\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // If logged in and user navigates to Register page, should redirect them to dashboard\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\");\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        id: \"loginrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"h5 text-center mb-4\",\n        id: \"loginp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"S'inscrire\"), React.createElement(\"div\", {\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Votre nom\",\n        icon: \"envelope\",\n        group: true,\n        onChange: this.onChange,\n        value: this.state.name,\n        id: \"name\",\n        type: \"text\",\n        className: classnames(\"\", {\n          invalid: errors.name\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Votre adresse e-mail\",\n        icon: \"envelope\",\n        group: true,\n        type: \"email\",\n        success: \"right\",\n        id: \"email\",\n        onChange: this.onChange,\n        value: this.state.email,\n        className: classnames(\"\", {\n          invalid: errors.email\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Votre mot de passe\",\n        icon: \"lock\",\n        group: true,\n        type: \"password\",\n        onChange: this.onChange,\n        value: this.state.password,\n        id: \"password\",\n        className: classnames(\"\", {\n          invalid: errors.password\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Confirmer votre mot de passe\",\n        icon: \"lock\",\n        group: true,\n        type: \"password\",\n        onChange: this.onChange,\n        value: this.state.password2,\n        id: \"password2\",\n        className: classnames(\"\", {\n          invalid: errors.password2\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        type: \"submit\",\n        id: \"bouton-connecter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"S'inscrire\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"J'ai deja un compte sur l' AT-C \\xA0 \", React.createElement(Link, {\n        to: \"/login\",\n        id: \"linkseconnecter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" Se connecter\"))))), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  registerUser: registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/home/dev/Musique/brunoFinalTest/test_front/src/components/auth/Register.js"],"names":["React","Component","Link","withRouter","PropTypes","connect","registerUser","classnames","MDBRow","MDBCol","MDBInput","MDBBtn","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","state","email","password","password2","props","history","errors","auth","isAuthenticated","push","nextProps","invalid","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn} from \"mdbreact\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container-fluid\">\n      \n      <div className=\"row\">\n        <div className=\"col-md-4\"></div>\n        <div className=\"col-md-4\" id=\"loginrow\">\n        <MDBRow>\n          <MDBCol md=\"12\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <p className=\"h5 text-center mb-4\" id=\"loginp\">S'inscrire</p>\n              <div className=\"grey-text\">\n                <MDBInput\n                  label=\"Votre nom\"\n                  icon=\"envelope\"\n                  group\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                  required\n                />\n                <MDBInput\n                  label=\"Votre adresse e-mail\"\n                  icon=\"envelope\"\n                  group\n                  type=\"email\"\n                  success=\"right\"\n                  id=\"email\"\n                  onChange={this.onChange}\n                  value={this.state.email}\n                \n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                  required\n                />\n                \n                <MDBInput\n                  label=\"Votre mot de passe\"\n                  icon=\"lock\"\n                  group\n                  type=\"password\"\n                  onChange={this.onChange}\n                  value={this.state.password}\n                 \n                  id=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                  required\n                />\n                 <MDBInput\n                  label=\"Confirmer votre mot de passe\"\n                  icon=\"lock\"\n                  group\n                  type=\"password\"\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  \n                  id=\"password2\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                  required\n                />\n                 \n              </div>\n              <div className=\"text-center\">\n                <MDBBtn type=\"submit\" id=\"bouton-connecter\">S'inscrire</MDBBtn>\n              </div><br/>\n            </form>\n                  <p>J'ai deja un compte sur l' AT-C &nbsp; <Link to=\"/login\" id=\"linkseconnecter\"> Se connecter</Link></p> \n          </MDBCol>\n        </MDBRow>\n        </div>\n        <div className=\"col-md-4\"></div>\n    </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register))\n"]},"metadata":{},"sourceType":"module"}